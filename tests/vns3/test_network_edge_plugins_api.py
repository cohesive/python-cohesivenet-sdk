# # coding: utf-8

# """
#     VNS3 Controller API

#     Cohesive networks VNS3 API providing complete control of your network's addresses, routes, rules and edge  # noqa: E501

#     The version of the OpenAPI document: 4.8
#     Contact: solutions@cohesive.net
#     Generated by: https://openapi-generator.tech
# """


# from __future__ import absolute_import

# import pytest

# import cohesivenet
# from cohesivenet.api.vns3 import network_edge_plugins_api
# from cohesivenet.rest import ApiException

# from tests.openapi import generate_method_test
# from tests.stub_data import NetworkEdgePluginsApiData


# @pytest.mark.licensed
# class TestNetworkEdgePluginsApi(object):
#     """NetworkEdgePluginsApi unit test stubs"""

#     def test_delete_container(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for delete_container

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "delete",
#             "/container_system/containers/{uuid}",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.delete_container)

#     def test_delete_container_image(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for delete_container_image

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "delete",
#             "/container_system/images/{uuid}",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.delete_container_image)

#     def test_get_container_logs(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for get_container_logs

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "get",
#             "/container_system/containers/{uuid}/logs",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.get_container_logs)

#     def test_get_container_system_ips(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for get_container_system_ips

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "get",
#             "/container_system/ip_addresses",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.get_container_system_ips)

#     def test_get_container_system_images(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for get_container_system_images
#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "get",
#             "/container_system/images",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.get_container_system_images)

#     def test_get_container_system_running_containers(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for get_container_system_running_containers

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "get",
#             "/container_system/containers",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.get_container_system_running_containers)

#     def test_get_container_system_status(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for get_container_system_status

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "get",
#             "/container_system",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.get_container_system_status)

#     def test_post_action_container_system(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for post_action_container_system

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "post",
#             "/container_system",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.post_action_container_system)

#     def test_post_commit_container(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for post_commit_container

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "post",
#             "/container_system/containers/{uuid}/commit",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.post_commit_container)

#     def test_post_create_container_image(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for post_create_container_image

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "post",
#             "/container_system/images",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.post_create_container_image)

#     def test_post_start_container(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for post_start_container

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "post",
#             "/container_system/containers",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.post_start_container)

#     def test_put_configure_container_system(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for put_configure_container_system

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "put",
#             "/container_system",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.put_configure_container_system)

#     def test_put_edit_container_image(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for put_edit_container_image

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "put",
#             "/container_system/images/{uuid}",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.put_edit_container_image)

#     def test_put_stop_container(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for put_stop_container

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "put",
#             "/container_system/containers/{uuid}",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.put_stop_container)

#     def test_restart_container_network(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for restart_container_network

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "post",
#             "/container_system",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.restart_container_network)

#     def test_wait_for_image_import(self, rest_mocker, api_client, api_schema: dict):
#         """Test case for wait_for_image_import

#         """
#         generate_method_test(
#             api_client,
#             api_schema,
#             "get",
#             "/container_system/images",
#             rest_mocker,
#             mock_request_from_schema=True,
#             mock_response=None
#         )(network_edge_plugins_api.wait_for_image_import)